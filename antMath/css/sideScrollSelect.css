

.dropdown-square-side{
    z-index: 999;
}

.dropdown-square-side {
    /*style the "box" in its minimzed state*/
    /* background-color: var(--navyColorTN); */
    display: flex;
    flex-direction: row;
    background-color: white;
    text-align: center;
    border:3px solid black; 
    width:var(--iconHeight); 
    height:var(--iconHeight); 

    min-width:var(--minIconHeight);
    min-height: var(--minIconHeight);

    overflow:hidden;
    /*animate the dropdown collapsing*/
    transition: width 0.1s;
    /* Over the iconDiv */
    
}
.dropdown-square-side:hover {
    /*when expanded, the dropdown will get native means of scrolling*/
    /* height:200px;  */
    /* overflow-y:scroll; */
    /*animate the dropdown expanding*/
    transition: width 0.5s;
    ;
}

#my-picker:hover{width: calc(2 * var(--iconHeight));}


.dropdown-square-side input {
    /*hide the nasty default radio buttons!*/

    position:absolute;top:0;left:0;opacity:0;
    
}
.dropdown-square-side label {
    /*style the labels to look like dropdown options*/

    display:flex;
    flex-direction: row;

    height:var(--iconHeight);
    width: var(--iconHeight);
    background-size:contain;

    color: black;
    font-size: calc(var(--iconHeight) * 0.7);
    
}

.dropdown-square-side:hover label{
    /*this is how labels render in the "expanded" state.
     we want to see only the selected radio button in the collapsed menu,
     and all of them when expanded*/
    display:flex;
    flex-direction: row;
    
}

.dropdown-square-side input:checked + label {
    /*tricky! labels immediately following a checked radio button
      (with our markup they are semantically related) should be fully opaque
      and visible even in the collapsed menu*/
    opacity:1 !important; display:flex;
    flex-direction: row;
}


label[for=choiceBackgroundGrass] {background-image:url("../img/background/ground3.jpg");}
label[for=choiceBackgroundSand] {background-image:url("../img/background/ground2.jpg");}
label[for=choiceBackgroundDirt] {background-image:url("../img/background/ground.jpg");}
label[for=choiceBackgroundPersonalized] {background-image:url("../img/icon/changeBG1.png");}


